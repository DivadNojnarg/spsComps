% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spsUIcollections.R
\name{gallery}
\alias{gallery}
\title{A shiny gallery component}
\usage{
gallery(
  texts,
  hrefs,
  images,
  Id = NULL,
  title = "Gallery",
  title_color = "#0275d8",
  image_frame_size = 4,
  style = ""
)
}
\arguments{
\item{texts}{vector of labels under each image}

\item{hrefs}{vector of links when each image is clicked}

\item{images}{a vector of image sources, can be online urls or local resource paths.}

\item{Id}{ID of this gallery}

\item{title}{Title of gallery}

\item{title_color}{Title color}

\item{image_frame_size}{integer, 1-12, this controls width. How large is each
image. 12 is the whole width of the screen and 1 is 1/12 of the screen.}

\item{style}{additional CSS style you want to to the most outside component "div"}
}
\value{
a gallery component
}
\description{
Create a gallery to display images or photos

\code{texts}, \code{hrefs}, \code{images} Must have the same length

If there is any image that you do not want to add links, use \code{""} to occupy the space, e.g

\code{hrefs = c("https://xxx.com", "", "https://xxx.com")}

If the link is empty, there will be no hover effect on that image, and you cannot click it.

Similar to \code{hrefs}, for the \code{texts}, use \code{""} to  occupy space
}
\examples{
if(interactive()){
    texts <- c("p1", "p2", "p3", "p4", "p5")
    hrefs <- c("https://unsplash.it/1200/768.jpg?image=251",
               "https://unsplash.it/1200/768.jpg?image=252",
               "#",
               "https://unsplash.it/1200/768.jpg?image=254",
               "https://unsplash.it/1200/768.jpg?image=255")
    images <- c("https://unsplash.it/600.jpg?image=251",
                "https://unsplash.it/600.jpg?image=252",
                "https://unsplash.it/600.jpg?image=253",
                "https://unsplash.it/600.jpg?image=254",
                "https://unsplash.it/600.jpg?image=255")
    library(shiny)

    ui <- fluidPage(
        useSps(),
        gallery(texts = texts, hrefs = hrefs, images = images)
    )

    server <- function(input, output, session) {

    }

    shinyApp(ui, server)
}
}
